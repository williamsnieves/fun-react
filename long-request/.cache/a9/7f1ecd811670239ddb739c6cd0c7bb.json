{"id":"node_modules/lodash-es/flatten.js","dependencies":[{"name":"/Users/williansnieves/Documents/development/practicas/fun-react/long-request/package.json","includedInParent":true,"mtime":1601835615825},{"name":"/Users/williansnieves/Documents/development/practicas/fun-react/long-request/node_modules/lodash-es/package.json","includedInParent":true,"mtime":1601835615303},{"name":"./_baseFlatten.js","loc":{"line":1,"column":24},"parent":"/Users/williansnieves/Documents/development/practicas/fun-react/long-request/node_modules/lodash-es/flatten.js","resolved":"/Users/williansnieves/Documents/development/practicas/fun-react/long-request/node_modules/lodash-es/_baseFlatten.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _baseFlatten = _interopRequireDefault(require(\"./_baseFlatten.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? (0, _baseFlatten.default)(array, 1) : [];\n}\n\nvar _default = flatten;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/flatten.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/lodash-es/flatten.js","original":{"line":3,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/flatten.js","original":{"line":17,"column":0}},{"name":"flatten","generated":{"line":26,"column":9},"source":"node_modules/lodash-es/flatten.js","original":{"line":17,"column":9}},{"generated":{"line":26,"column":16},"source":"node_modules/lodash-es/flatten.js","original":{"line":17,"column":0}},{"name":"array","generated":{"line":26,"column":17},"source":"node_modules/lodash-es/flatten.js","original":{"line":17,"column":17}},{"generated":{"line":26,"column":22},"source":"node_modules/lodash-es/flatten.js","original":{"line":17,"column":0}},{"generated":{"line":26,"column":24},"source":"node_modules/lodash-es/flatten.js","original":{"line":17,"column":24}},{"generated":{"line":27,"column":0},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":2}},{"name":"length","generated":{"line":27,"column":6},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":6}},{"generated":{"line":27,"column":12},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":12}},{"name":"array","generated":{"line":27,"column":15},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":15}},{"generated":{"line":27,"column":20},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":20}},{"generated":{"line":27,"column":24},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":24}},{"generated":{"line":27,"column":28},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":15}},{"generated":{"line":27,"column":31},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":31}},{"generated":{"line":27,"column":32},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":15}},{"name":"array","generated":{"line":27,"column":35},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":35}},{"generated":{"line":27,"column":40},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":40}},{"name":"length","generated":{"line":27,"column":41},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":41}},{"generated":{"line":27,"column":47},"source":"node_modules/lodash-es/flatten.js","original":{"line":18,"column":2}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":2}},{"name":"length","generated":{"line":28,"column":9},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":9}},{"generated":{"line":28,"column":15},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":15}},{"generated":{"line":28,"column":18},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":18}},{"name":"array","generated":{"line":28,"column":44},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":30}},{"generated":{"line":28,"column":49},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":18}},{"generated":{"line":28,"column":51},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":37}},{"generated":{"line":28,"column":52},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":18}},{"generated":{"line":28,"column":53},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":15}},{"generated":{"line":28,"column":56},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":42}},{"generated":{"line":28,"column":58},"source":"node_modules/lodash-es/flatten.js","original":{"line":19,"column":2}},{"generated":{"line":29,"column":0},"source":"node_modules/lodash-es/flatten.js","original":{"line":20,"column":1}},{"name":"flatten","generated":{"line":31,"column":15},"source":"node_modules/lodash-es/flatten.js","original":{"line":22,"column":15}}],"sources":{"node_modules/lodash-es/flatten.js":"import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n"},"lineCount":null}},"error":null,"hash":"2ba2f6bf519a4ac3dc81a8c09f97455d","cacheData":{"env":{}}}